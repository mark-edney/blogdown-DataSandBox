summarise(Donations = sum(VALUE)) %>%
ggplot(aes(x = '', y = Donations, fill = GEO)) +
geom_bar(stat = "identity") +
coord_polar()
p3
p3 <- data %>%
group_by(GEO) %>%
summarise(Donations = sum(VALUE)) %>%
ggplot(aes(x = '', y = Donations, fill = GEO)) +
geom_bar(stat = "identity", width = 1) +
coord_polar()
p3
p3 <- data %>%
group_by(GEO) %>%
summarise(Donations = sum(VALUE)) %>%
ggplot(aes(x = '', y = Donations, fill = GEO)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0)
p3 <- data %>%
group_by(GEO) %>%
summarise(Donations = sum(VALUE)) %>%
ggplot(aes(x = '', y = Donations, fill = GEO)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0)
p3
p3
p3 <- data %>%
group_by(GEO) %>%
summarise(Donations = sum(VALUE)) %>%
ggplot(aes(x = '', y = Donations, fill = GEO)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void()
p3
p3 <- data %>%
group_by(GEO) %>%
summarise(Donations = sum(VALUE)) %>%
ggplot(aes(x = '', y = Donations, fill = GEO)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void()
p3
?geom_bar
?ggplotly
?geom_bar()
p
p <- data %>%
group_by(GEO) %>%
summarise(Donations = sum(VALUE)) %>%
ggplot(aes(x = GEO, y = Donations, fill = GEO)) +
geom_bar(stat = "identity", show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 90))
ggplotly(p)
p
p <- data %>%
group_by(GEO) %>%
summarise(Donations = sum(VALUE)) %>%
ggplot(aes(x = GEO, y = Donations, fill = GEO)) +
geom_bar(stat = "identity", show.legend = FALSE) + guides(fill=FALSE) +
theme(axis.text.x = element_text(angle = 90))
p <- data %>%
group_by(GEO) %>%
summarise(Donations = sum(VALUE)) %>%
ggplot(aes(x = GEO, y = Donations, fill = GEO)) +
geom_bar(stat = "identity", show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 90), legend.position='none')
?rename
p2 <- data %>%
group_by(Education) %>%
rename(Donations = VALUE) %>%
ggplot(aes(y= Donations, x = Education, fill = Education)) +
geom_boxplot() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
?knitr::render_html
knitr::render_html("/index.en_files/html/demo1.html")
knitr::render_html("/index.en_files/html/demo1.html")
?knitr::render_html("/index.en_files/html/demo1.html")
knitr::render_html("/index.en_files/html/demo1.html")
knitr::render_html()
knitr::render_html()
knitr::render_html(input = "/index.en_files/html/demo1.html")
knitr::raw_html("/index.en_files/html/demo1.html")
knitr::include_url("/index.en_files/html/demo1.html")
blogdown:::preview_site()
htmltools::renderDocument("demo1.html")
htmltools::includeHTML("demo1.html")
htmltools::includeHTML("demo1.html")
htmltools::includeHTML("demo1.html")
install.packages("usethis")
usethis::use_vignette(name = "dashboard", title = "Your Dashboard Name")
htmltools::includeHTML("demo2.html")
library(blogdown)
stop_server()
stop_server()
blogdown:::preview_site()
stop_server()
blogdown:::preview_site()
detach("package:blogdown", unload = TRUE)
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
library(flexdashboard)
library(tidyverse)
library(shiny)
library(plotly)
download.file("https://www150.statcan.gc.ca/n1/tbl/csv/45100007-eng.zip", "donordata.zip")
unzip("donordata.zip")
data = read_csv("45100007.csv")
data = data %>%
filter(`Donation statistics (UOM)`=='Average annual donations') %>%
filter(!GEO=="Canada") %>%
filter(!Education == "All education levels") %>% rename(Province = GEO)
data$Province[data$Province == "Newfoundland and Labrador"] <- "Newfoundland"
data$Province[data$Province == "Prince Edward Island"] <- "P.E.I."
library(flexdashboard)
library(tidyverse)
library(shiny)
library(plotly)
download.file("https://www150.statcan.gc.ca/n1/tbl/csv/45100007-eng.zip", "donordata.zip")
unzip("donordata.zip")
data = read_csv("45100007.csv")
data = data %>%
filter(`Donation statistics (UOM)`=='Average annual donations') %>%
filter(!GEO=="Canada") %>%
filter(!Education == "All education levels") %>% rename(Province = GEO)
data$Province[data$Province == "Newfoundland and Labrador"] <- "Newfoundland"
data$Province[data$Province == "Prince Edward Island"] <- "P.E.I."
p <- data %>%
group_by(Province) %>%
summarise(Donations = sum(VALUE)) %>%
ggplot(aes(x = Province, y = Donations, fill = Province)) +
geom_bar(stat = "identity", show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 90), legend.position='none')
ggplotly(p)
p2 <- data %>%
group_by(Education) %>%
rename(Donations = VALUE) %>%
ggplot(aes(y= Donations, x = Education, fill = Education)) +
geom_boxplot() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplotly(p2)
p3 <- data %>%
group_by(Province) %>%
summarise(Donations = sum(VALUE)) %>%
ggplot(aes(x = '', y = Donations, fill = Province)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void()
p3
blogdown:::preview_site()
blogdown:::stop_server()
htmltools::renderDocument("/demo1.html")
htmltools::renderDocument("/demo1.html")
htmltools::renderDocument("demo1.html")
htmltools::renderDocument("demo1.html")
htmltools::renderDocument("demo1.html")
?htmltools::renderDocument
htmltools::includeHTML("demo1.html")
blogdown:::preview_site()
tags$iframe()
htmltools::includeHTML("demo1.html")
?tags
tags$iframe(htmltools::includeHTML("demo1.html"))
tags$iframe(htmltools::includeHTML("demo1.html"))
library(flexdashboard)
library(shiny)
library(tidyverse)
library(flexdashboard)
library(shiny)
library(tidyverse)
htmltools::includeHTML("demo1.html" %>%
tags$iframe())
?includeHTML
htmltools::tags$iframe(src = "demo1.html")
htmltools::tags$iframe(src = "demo1.html", height = 600, width = 100%)
htmltools::tags$iframe(src = "demo1.html", height = 600, width = "100%")
View(p)
htmltools::includeHTML("demo1.html")
htmltools::includeHTML("demo1.html")
htmltools::includeHTML("demo1.html")
?tags$iframe()
tags$iframe()
htmltools::includeHTML("demo1.html")
tags$iframe("demo1.html")
htmltools::includeHTML("demo1.html")
?htmlwidgets::htmlwidgets
vignette("develop_intro", package = "htmlwidgets")
htmltools::as.tags("demo1.html")
htmltools::withTags(iframe,
"demo1.html")
?withTags
htmltools::renderDocument("demo1.html")
<iframe>
html(
<iframe>
html(
<iframe>,
html(
"<iframe>",
htmltools::includeHTML("demo1.html"),
"</iframe>")
htmltools::includeHTML("demo1.html")
htmltools::tags$iframe(title = "Demo 1", src= "demo1.html")
library(leaflet)
?leaflet
library(flexdashboard)
library(tidyverse)
library(shiny)
library(plotly)
library(leaflet)
download.file("https://www150.statcan.gc.ca/n1/tbl/csv/45100007-eng.zip", "donordata.zip")
unzip("donordata.zip")
data = read_csv("45100007.csv")
data = data %>%
filter(`Donation statistics (UOM)`=='Average annual donations') %>%
filter(!GEO=="Canada") %>%
filter(!Education == "All education levels") %>% rename(Province = GEO)
data$Province[data$Province == "Newfoundland and Labrador"] <- "Newfoundland"
data$Province[data$Province == "Prince Edward Island"] <- "P.E.I."
data %>%
group_by(Province) %>%
summarise(Donations = sum(VALUE)) %>%
leaflet()
p <- data %>%
group_by(Province) %>%
summarise(Donations = sum(VALUE)) %>%
leaflet() %>%
addTiles()
data %>%
group_by(Province) %>%
summarise(Donations = sum(VALUE)) %>%
leaflet() %>%
addTiles()
library(rgdal)
install.packages("rgdal")
library(rgdal)
if (!file.exists("./src/ref/ne_50m_admin_1_states_provinces_lakes/ne_50m_admin_1_states_provinces_lakes.dbf")){
download.file(file.path('http://www.naturalearthdata.com/http/',
'www.naturalearthdata.com/download/50m/cultural',
'ne_50m_admin_1_states_provinces_lakes.zip'),
f <- tempfile())
unzip(f, exdir = "./src/ref/ne_50m_admin_1_states_provinces_lakes")
rm(f)
}
region <- readOGR("./src/ref/ne_50m_admin_1_states_provinces_lakes", 'ne_50m_admin_1_states_provinces_lakes', encoding='UTF-8')
library(leaflet)
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 3) %>%
addPolygons(data = subset(region, name %in% c("British Columbia", "Alberta", "Saskatchewan", "Manitoba", "Ontario", "Quebec", "New Brunswick", "Prince Edward Island", "Nova Scotia", "Newfoundland and Labrador", "Yukon", "Northwest Territories", "Nunavut")),
fillColor = topo.colors(10, alpha = NULL),
weight = 1)
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 3) %>%
addPolygons(data = subset(region, name %in% c("British Columbia", "Alberta", "Saskatchewan", "Manitoba", "Ontario", "Quebec", "New Brunswick", "Prince Edward Island", "Nova Scotia", "Newfoundland and Labrador", "Yukon", "Northwest Territories", "Nunavut")),
fillColor = topo.colors(10, alpha = NULL),
weight = 1)
data
data$UOM
data2 <- data %>%
group_by(Province) %>%
summarise(Donations = sum(VALUE))
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 3) %>%
addPolygons(data = subset(region, name %in% c("British Columbia", "Alberta", "Saskatchewan", "Manitoba", "Ontario", "Quebec", "New Brunswick", "Prince Edward Island", "Nova Scotia", "Newfoundland and Labrador", "Yukon", "Northwest Territories", "Nunavut")),
fillColor = topo.colors(data2$Donations, alpha = NULL),
weight = 1)
fillColor = topo.colors(data2$Donations, alpha = NULL),
data2$Donations
data2$Province
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 3) %>%
addPolygons(data = subset(region, name %in% c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "Quebec", "Saskatchewan", "Yukon", "Northwest Territories", "Nunavut")),
fillColor = topo.colors(data2$Donations, alpha = NULL),
weight = 1)
region
region$name
region$name %in% "Quebec"
sum(region$name %in% "Quebec")
sum(region$name %in% "Ontario")
region$name %in% "Ontario"
sort(region$name)
library(rgdal)
if (!file.exists("./src/ref/ne_50m_admin_1_states_provinces_lakes/ne_50m_admin_1_states_provinces_lakes.dbf")){
download.file(file.path('http://www.naturalearthdata.com/http/',
'www.naturalearthdata.com/download/50m/cultural',
'ne_50m_admin_1_states_provinces_lakes.zip'),
f <- tempfile())
unzip(f, exdir = "./src/ref/ne_50m_admin_1_states_provinces_lakes")
rm(f)
}
region <- readOGR("./src/ref/ne_50m_admin_1_states_provinces_lakes", 'ne_50m_admin_1_states_provinces_lakes', encoding='UTF-8')
library(leaflet)
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 3) %>%
addPolygons(data = subset(region, name %in% c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan", "Yukon", "Northwest Territories", "Nunavut")),
fillColor = topo.colors(data2$Donations, alpha = NULL),
weight = 1)
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 3) %>%
addPolygons(data = subset(region, name %in% c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan", "Yukon", "Northwest Territories", "Nunavut")),
fillColor = topo.colors(data2$Donations, alpha = NULL),
weight = 1)
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 3) %>%
addPolygons(data = subset(region, name %in% c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan", "Yukon", "Northwest Territories", "Nunavut")),
fillColor = data2$Donations,
weight = 1)
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 2) %>%
addPolygons(data = subset(region, name %in% c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan", "Yukon", "Northwest Territories", "Nunavut")),
fillColor = fillColor = ~colorQuantile("YlOrRd", data2$Donations)(data2$Donations),
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 2) %>%
addPolygons(data = subset(region, name %in% c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan", "Yukon", "Northwest Territories", "Nunavut")),
fillColor = ~colorQuantile("YlOrRd", data2$Donations)(data2$Donations),
weight = 1)
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 2) %>%
addPolygons(data = subset(region, name %in% c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan", "Yukon", "Northwest Territories", "Nunavut")), opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", data2$Donations)(data2$Donations),
weight = 1)
?colorQuantile
palette()
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 2) %>%
addPolygons(data = subset(region, name %in% c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan", "Yukon", "Northwest Territories", "Nunavut")), opacity = 1.0, fillOpacity = 0.75,
fillColor = ~colorQuantile("YlOrRd", data2$Donations)(data2$Donations),
weight = 1)
data2
data2$Province
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 2) %>%
addPolygons(data = subset(region, name %in% data2$Province), opacity = 1.0, fillOpacity = 0.75,
fillColor = ~colorQuantile("YlOrRd", data2$Donations)(data2$Donations),
weight = 1)
data2$Province==c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan", "Yukon", "Northwest Territories", "Nunavut")
mask <- data2$Province==c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan", "Yukon", "Northwest Territories", "Nunavut")
data2$Province[mask]
mask <- data2$Province==c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan", "Yukon", "Northwest Territories", "Nunavut")
data2$Province[-mask]
data2$Province[!mask]
data2$Province
data2$Province[mask]
length(data2)
length(data2$Province)
length(c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan", "Yukon", "Northwest Territories", "Nunavut"))
length(c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan"))
data2$Province == c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan"))\
data2$Province == c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan")
mask <- data2$Province == c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan")
data2[mask]
data2$Province[mask]
data2$Province[!mask]
data2$Province <- c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan")
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 2) %>%
addPolygons(data = subset(region, name %in% data2$Province), opacity = 1.0, fillOpacity = 0.75,
fillColor = ~colorQuantile("YlOrRd", data2$Donations)(data2$Donations),
weight = 1)
data2$Province[!mask]
YlOrRd
pallete(YlOrRd)
pallete("YlOrRd")
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 2) %>%
addPolygons(data = subset(region, name %in% data2$Province), color = "#444444", opacity = 1.0, fillOpacity = 0.75,
fillColor = ~colorQuantile("YlOrRd", data2$Donations)(data2$Donations),
weight = 1)
data2
colors()
pallete()
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 2) %>%
addPolygons(data = subset(region, name %in% data2$Province), color = "#444444", opacity = 1.0, fillOpacity = 0.75,
fillColor = ~colorQuantile("Reds", data2$Donations)(data2$Donations),
weight = 1)
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 2) %>%
addPolygons(data = subset(region, name %in% data2$Province), color = "#444444", opacity = 1.0, fillOpacity = 0.75,
fillColor = ~colorQuantile("Greens", data2$Donations)(data2$Donations),
weight = 1)
library(rgdal)
if (!file.exists("./src/ref/ne_50m_admin_1_states_provinces_lakes/ne_50m_admin_1_states_provinces_lakes.dbf")){
download.file(file.path('http://www.naturalearthdata.com/http/',
'www.naturalearthdata.com/download/50m/cultural',
'ne_50m_admin_1_states_provinces_lakes.zip'),
f <- tempfile())
unzip(f, exdir = "./src/ref/ne_50m_admin_1_states_provinces_lakes")
rm(f)
}
region <- readOGR("./src/ref/ne_50m_admin_1_states_provinces_lakes", 'ne_50m_admin_1_states_provinces_lakes', encoding='UTF-8')
data2$Province <- c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan")
library(leaflet)
leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 2) %>%
addPolygons(data = subset(region, name %in% data2$Province), color = "#444444", opacity = 1.0, fillOpacity = 0.75,
fillColor = ~colorQuantile("Greens", data2$Donations)(data2$Donations),
weight = 1)
p
plotly(p)
library(flexdashboard)
library(tidyverse)
library(shiny)
library(plotly)
library(leaflet)
download.file("https://www150.statcan.gc.ca/n1/tbl/csv/45100007-eng.zip", "donordata.zip")
unzip("donordata.zip")
data = read_csv("45100007.csv")
data = data %>%
filter(`Donation statistics (UOM)`=='Average annual donations') %>%
filter(!GEO=="Canada") %>%
filter(!Education == "All education levels") %>% rename(Province = GEO)
data$Province[data$Province == "Newfoundland and Labrador"] <- "Newfoundland"
data$Province[data$Province == "Prince Edward Island"] <- "P.E.I."
data2 <- data %>%
group_by(Province) %>%
summarise(Donations = sum(VALUE))
library(rgdal)
if (!file.exists("./src/ref/ne_50m_admin_1_states_provinces_lakes/ne_50m_admin_1_states_provinces_lakes.dbf")){
download.file(file.path('http://www.naturalearthdata.com/http/',
'www.naturalearthdata.com/download/50m/cultural',
'ne_50m_admin_1_states_provinces_lakes.zip'),
f <- tempfile())
unzip(f, exdir = "./src/ref/ne_50m_admin_1_states_provinces_lakes")
rm(f)
}
region <- readOGR("./src/ref/ne_50m_admin_1_states_provinces_lakes", 'ne_50m_admin_1_states_provinces_lakes', encoding='UTF-8')
data2$Province <- c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan")
library(leaflet)
p <- leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 2) %>%
addPolygons(data = subset(region, name %in% data2$Province), color = "#444444", opacity = 1.0, fillOpacity = 0.75,
fillColor = ~colorQuantile("Greens", data2$Donations)(data2$Donations),
weight = 1)
plotly(p)
library(gt)
data2 %>% gt()%>%
pivot_wider()
data2 %>% pivot_wider()
?pivot_wider
data2 %>% pivot_wider()
data2 %>% pivot_wider(names_from = Province)
data2 %>% pivot_wider(names_from = Province, values_from = Donations)
library(gt)
data2 %>%
pivot_wider(names_from = Province, values_from = Donations) %>%
gt()
p2 <- data %>%
rename(Donations = VALUE) %>%
ggplot(aes(y= Donations, fill = Education)) +
geom_histogram() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplotly(p2)
data2 %>% pivot_wider(names_from = Province, values_from = Donations)
blogdown:::preview_site()
?flexdashboard
library(blogdown)
serve_site()
stop_server()
stop_server()
serve_site()
blogdown:::preview_site()
knitr::include_url(url = "https://m2edney.shinyapps.io/Text_Predictive_Model/?_ga=2.85073049.129590181.1646962570-1341333380.1645206372")
knitr::include_url("https://m2edney.shinyapps.io/Toronto_bike/?_ga=2.75026646.519818068.1645317226-1341333380.1645206372")
library(blogdown)
stop_server()
serve_site()
stop_server()
blogdown:::preview_site()
serve_site()
blogdown:::preview_site()
knitr::knit2html("index.en.RMD")
getwd()
knitr::knit2html("content\post\2022-03-04-text-prediction-app\index.en.RMD")
knitr::knit2html("content/post/2022-03-04-text-prediction-app/index.en.RMD")
rmarkdown::render("content/post/2022-03-04-text-prediction-app/index.en.RMD")
library(blogdown)
serve_site()
?blogdown
blogdown::html_page()
?blogdown::count_yaml
?blogdown::count_yaml()
blogdown:::new_post_addin()
setwd("~/R/blogdown-DataSandBox")
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::preview_site()
