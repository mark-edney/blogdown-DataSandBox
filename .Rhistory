summarise(Donations = sum(VALUE))
library(rgdal)
if (!file.exists("./src/ref/ne_50m_admin_1_states_provinces_lakes/ne_50m_admin_1_states_provinces_lakes.dbf")){
download.file(file.path('http://www.naturalearthdata.com/http/',
'www.naturalearthdata.com/download/50m/cultural',
'ne_50m_admin_1_states_provinces_lakes.zip'),
f <- tempfile())
unzip(f, exdir = "./src/ref/ne_50m_admin_1_states_provinces_lakes")
rm(f)
}
region <- readOGR("./src/ref/ne_50m_admin_1_states_provinces_lakes", 'ne_50m_admin_1_states_provinces_lakes', encoding='UTF-8')
data2$Province <- c("Alberta", "British Columbia", "Manitoba", "New Brunswick", "Newfoundland and Labrador", "Nova Scotia", "Ontario", "Prince Edward Island", "QuÃ©bec", "Saskatchewan")
library(leaflet)
p <- leaflet() %>%
addTiles() %>%
setView(-74.09, 45.7,  zoom = 2) %>%
addPolygons(data = subset(region, name %in% data2$Province), color = "#444444", opacity = 1.0, fillOpacity = 0.75,
fillColor = ~colorQuantile("Greens", data2$Donations)(data2$Donations),
weight = 1)
plotly(p)
library(gt)
data2 %>% gt()%>%
pivot_wider()
data2 %>% pivot_wider()
?pivot_wider
data2 %>% pivot_wider()
data2 %>% pivot_wider(names_from = Province)
data2 %>% pivot_wider(names_from = Province, values_from = Donations)
library(gt)
data2 %>%
pivot_wider(names_from = Province, values_from = Donations) %>%
gt()
p2 <- data %>%
rename(Donations = VALUE) %>%
ggplot(aes(y= Donations, fill = Education)) +
geom_histogram() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplotly(p2)
data2 %>% pivot_wider(names_from = Province, values_from = Donations)
blogdown:::preview_site()
?flexdashboard
library(blogdown)
serve_site()
stop_server()
stop_server()
serve_site()
blogdown:::preview_site()
knitr::include_url(url = "https://m2edney.shinyapps.io/Text_Predictive_Model/?_ga=2.85073049.129590181.1646962570-1341333380.1645206372")
knitr::include_url("https://m2edney.shinyapps.io/Toronto_bike/?_ga=2.75026646.519818068.1645317226-1341333380.1645206372")
library(blogdown)
stop_server()
serve_site()
stop_server()
blogdown:::preview_site()
serve_site()
blogdown:::preview_site()
knitr::knit2html("index.en.RMD")
getwd()
knitr::knit2html("content\post\2022-03-04-text-prediction-app\index.en.RMD")
knitr::knit2html("content/post/2022-03-04-text-prediction-app/index.en.RMD")
rmarkdown::render("content/post/2022-03-04-text-prediction-app/index.en.RMD")
library(blogdown)
serve_site()
?blogdown
blogdown::html_page()
?blogdown::count_yaml
?blogdown::count_yaml()
blogdown:::new_post_addin()
setwd("~/R/blogdown-DataSandBox")
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::preview_site()
git add -A
shinyApp(
#This is the standard format for a shiny app
#The UI function controls all the frontend for the app
ui = fluidPage(
titlePanel("Job Posting Word Cloud"),
sidebarLayout(
sidebarPanel(
#The user is asked for a url
textInput("url", "input URL", value = "https://www.google.com/")
),
mainPanel(
#The word cloud plot is displayed
h4("Key-Word Cloud"),
wordcloud2Output("plot")
)
)
),
#The server function controls the backend for the app
server = function(input, output){
#The keywords are loaded and an index of how many words per keyword is created
Keywords <- read_csv("Keywords.csv")
Keywords$Keys <- str_to_lower(Keywords$Keys)
index <- Keywords$Keys %>% str_count(" ")
#The { brackets are used to create reactive functions which continuously run
data <- reactive({
#The input variable is how the server side receives data from the ui side
url <- input$url
#The text is read from the url provide by the user
data <- text %>%
data.frame(text = .)
#Since there are ngrams of length 1-3, there a three search's that are concatenated together
rbind(data %>%
#the unnest_tolkens from the tidytext library is used to create the ngrams
unnest_tokens(word, text, token = "ngrams", n= 1) %>%
#A count is performed on each ngram in the website to find the most common ngrams
count(word, name = 'freq', sort = TRUE) %>%
#The ngram count is then filtered by the keywords of the same ngram length
filter(word %in% Keywords$Keys[index == 0]),
#The steps are repeated for bigrams (ngrams of length 2) and trigrams(ngrams of length 3)
data %>%
unnest_tokens(word, text, token = "ngrams", n= 2) %>%
count(word, name = 'freq', sort = TRUE) %>%
filter(word %in% Keywords$Keys[index == 1]),
data %>%
unnest_tokens(word, text, token = "ngrams", n= 3) %>%
count(word, name = 'freq', sort = TRUE) %>%
filter(word %in% Keywords$Keys[index == 2]))
})
#The plot/wordcloud needs to be saved as an output value
#The output variable is how the server sends data back to the UI
output$plot <- renderWordcloud2({
#One part of the strange syntax of a shiny app is that the since the data is reactive
#and changes with the user input, it is passed in a function so it needs to be called
#as data ()
wordcloud2(data())
})
},
options = list(height = 500)
)
# Chunk 1: Inialization
library(shiny)
library(wordcloud2)
library(tidyverse)
library(XML)
library(rvest)
library(tidytext)
# Chunk 2: keys
Keywords <- read_csv("Keywords.csv")
Keywords$Keys %>% head()
blogdown:::preview_site()
blogdown:::new_post_addin()
install.packages("crosstalk")
install.packages("crosstalk")
library(crosstalk)
library(blogdown)
serve_site()
install.packages("crosstalk")
library(crosstalk)
library(tidyverse)
download.file("https://open.canada.ca/data/dataset/14248413-5a73-4ddc-8a58-c5518aefff4b/resource/32fd0121-d5e8-4b48-97c1-a92dae79dc8a/download/organisations-financees-organisations-funded-bil.csv", "data.csv")
data <- read_csv("data.csv")
install.packages("crosstalk")
library(tidyverse)
df <- read_csv("data.csv")
download.file("https://open.canada.ca/data/dataset/14248413-5a73-4ddc-8a58-c5518aefff4b/resource/32fd0121-d5e8-4b48-97c1-a92dae79dc8a/download/organisations-financees-organisations-funded-bil.csv", "data.csv")
df <- read_csv("data.csv")
df <- read_csv("data.csv")
?read_csv
df <- read_csv2("data.csv")
df <- read_csv("data.csv")
df <- read_csv("data.csv", skip = 1)
View(df)
install.packages("crosstalk")
library(crosstalk)
library(tidyverse)
download.file("https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/4ef82789-e038-44ef-a478-a8f3590c3eb1/resource/979fb513-5186-41e9-bb23-7b5cc6b89915/download/Apartment%20Building%20Evaluation.csv")
install.packages("crosstalk")
library(crosstalk)
library(tidyverse)
download.file("https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/4ef82789-e038-44ef-a478-a8f3590c3eb1/resource/979fb513-5186-41e9-bb23-7b5cc6b89915/download/Apartment%20Building%20Evaluation.csv", "data.csv")
df <- read_csv("data.csv")
install.packages("crosstalk")
View(df)
df$SCORE
df$SCORE %>% summary()
df$SCORE %>% glimpse()
library(tidyverse)
df$SCORE %>% glimpse()
df$SCORE %>% summary()
install.packages("crosstalk")
library(crosstalk)
library(tidyverse)
download.file("https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/4ef82789-e038-44ef-a478-a8f3590c3eb1/resource/979fb513-5186-41e9-bb23-7b5cc6b89915/download/Apartment%20Building%20Evaluation.csv", "data.csv")
df <- read_csv("data.csv") %>%
select(_ID, LONGITUDE, LATITUDE, SCORE, YEAR_BUILT)
df <- read_csv("data.csv") %>%
select(_ID, LONGITUDE, LATITUDE, SCORE, YEAR_BUILT)
df <- read_csv("data.csv") %>%
select(_id, LONGITUDE, LATITUDE, SCORE, YEAR_BUILT)
df <- read_csv("data.csv") %>%
select("_id", LONGITUDE, LATITUDE, SCORE, YEAR_BUILT)
df <- read_csv("data.cs")
df <- read_csv("data.csv")
setwd("~/R/blogdown-DataSandBox/content/post/2022-03-18-making-the-connection-with-crosstalk")
df <- read_csv("data.csv")
df <- read_csv("data.csv") %>%
select(_ID, LONGITUDE, LATITUDE, SCORE, YEAR_BUILT)
df <- read_csv("data.csv") %>%
select("_id", LONGITUDE, LATITUDE, SCORE, YEAR_BUILT)
df <- read_csv("data.csv") %>%
select(ID = "_id", LONGITUDE, LATITUDE, SCORE, YEAR_BUILT)
View(df)
df <- read_csv("data.csv")
pairs(df)
df %>% head()
?read_csv
df <- read_csv("data.csv", string_as_factor = TRUE)
library(ggally)
install.packages("GGally")
library(GGally)
ggpairs(df)
ggpairs(df[:,5:])
ggpairs(df[,5:])
ggpairs(df[,5])
ggpairs(df[,1:5])
View(df)
is.numeric(df)
is.numeric(df$BALCONY_GUARDS)
is.numeric(df$CONFIRMED_STOREYS)
df
install.packages("crosstalk")
library(crosstalk)
library(tidyverse)
library(flexdashboard)
download.file("https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/4ef82789-e038-44ef-a478-a8f3590c3eb1/resource/979fb513-5186-41e9-bb23-7b5cc6b89915/download/Apartment%20Building%20Evaluation.csv", "data.csv")
df <- read_csv("data.csv") %>%
select(ID = "_id", LONGITUDE, LATITUDE, SCORE, YEAR_BUILT)
library(GGally)
ggpairs(df)
install.packages("crosstalk")
library(crosstalk)
library(tidyverse)
library(flexdashboard)
df <- read_csv("data.csv") %>%
select(ID = "_id", LONGITUDE, LATITUDE, SCORE, YEAR_BUILT)
library(GGally)
ggpairs(df)
ggpairs(df)
library(crosstalk)
library(tidyverse)
library(flexdashboard)
library(plotly)
library(leaflet)
library(crosstalk)
library(tidyverse)
library(flexdashboard)
library(plotly)
library(leaflet)
download.file("https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/4ef82789-e038-44ef-a478-a8f3590c3eb1/resource/979fb513-5186-41e9-bb23-7b5cc6b89915/download/Apartment%20Building%20Evaluation.csv", "data.csv")
df <- read_csv("data.csv") %>%
select(ID = "_id", LONGITUDE, LATITUDE, SCORE, YEAR_BUILT) %>% slice_sample(prop = 0.1)
shared_df <- SharedData$new(df)
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
p
library(crosstalk)
library(tidyverse)
library(flexdashboard)
library(plotly)
library(leaflet)
download.file("https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/4ef82789-e038-44ef-a478-a8f3590c3eb1/resource/979fb513-5186-41e9-bb23-7b5cc6b89915/download/Apartment%20Building%20Evaluation.csv", "data.csv")
df <- read_csv("data.csv") %>%
select(ID = "_id", LONGITUDE, LATITUDE, SCORE, YEAR_BUILT) %>% slice_sample(n = 100)
shared_df <- SharedData$new(df)
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
p
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
library(crosstalk)
library(tidyverse)
library(flexdashboard)
library(plotly)
library(leaflet)
download.file("https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/4ef82789-e038-44ef-a478-a8f3590c3eb1/resource/979fb513-5186-41e9-bb23-7b5cc6b89915/download/Apartment%20Building%20Evaluation.csv", "data.csv")
df <- read_csv("data.csv") %>%
select(ID = "_id", lng = LONGITUDE, lat = LATITUDE, SCORE, YEAR_BUILT) %>% slice_sample(n = 10)
shared_df <- SharedData$new(df)
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
p
df %>%
+         leaflet() %>%
+         addTiles() %>%
+         addMarkers()
df %>% leaflet() %>% addTiles() %>% addMarkers()
df$lng
df$lat
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
p
shared_df %>% addTiles() %>% addMarkers(lng = lng, lat=lat)
shared_df %>% addTiles() %>% addMarkers(lng = .$lng, lat=.$lat)
shared_df %>% addTiles() %>% addMarkers()
shared_df %>% leafflet() %>% addTiles() %>% addMarkers()
shared_df %>% leaflet() %>% addTiles() %>% addMarkers()
shared_df %>% leaflet() %>% addTiles() %>% addMarkers(lng = lng)
shared_df %>% leaflet() %>% addTiles() %>% addMarkers(lng = .$lng)
shared_df %>% leaflet() %>% addTiles() %>% addMarkers(lng = .$lng, lat = .$lat)
shared_df %>% leaflet() %>% addTiles() %>% addMarkers()
df %>% leaflet() %>% addTiles() %>% addMarkers()
df %>% leaflet() %>% addMarkers()
df %>% leaflet() %>% addTiles() %>% addMarkers()
leaflet() %>% addTiles() %>% addMarkers(df)
leaflet() %>% addTiles() %>% addMarkers(lat = df$lat, lng = df$lng)
leaflet() %>% addTiles() %>% addMarkers(lat = df$lat, lng = df$lng)
leaflet() %>% addTiles() %>% addMarkers(lat = df$lat, lng = df$lng)
df %>% leaflet() %>% addTiles() %>% addMarkers()
df %>% leaflet() %>% addTiles()
df %>% leaflet() %>% addTiles() %>% addCircleMarkers()
df %>% leaflet() %>% addTiles() %>% addMarkers()
df %>% leaflet() %>% addTiles() %>% addMarkers()
?addMarkers
df %>% leaflet() %>% addTiles() %>% addPopups()
df %>% leaflet() %>% addTiles() %>% addMarkers()
df %>% leaflet() %>% addTiles() %>% addMarkers(popup = ID)
df %>% leaflet() %>% addTiles() %>% addMarkers(popup = df$ID)
df %>% leaflet() %>% addTiles() %>% addMarkers(popup = .$ID)
df %>% leaflet() %>% addTiles() %>% addCircleMarkers(popup = .$ID)
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
p
View(p)
p$x
p$width
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers()
p
p$x
library(crosstalk)
library(tidyverse)
library(flexdashboard)
library(plotly)
library(leaflet)
download.file("https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/4ef82789-e038-44ef-a478-a8f3590c3eb1/resource/979fb513-5186-41e9-bb23-7b5cc6b89915/download/Apartment%20Building%20Evaluation.csv", "data.csv")
df <- read_csv("data.csv") %>%
select(ID = "_id", lng = LONGITUDE, lat = LATITUDE, SCORE, YEAR_BUILT) %>% slice_sample(n = 100)
shared_df <- SharedData$new(df)
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup = ~as.character(ID), label = ~as.character(ID))
p
df <- read_csv("data.csv")
setwd("C:/Users/Mark/Desktop")
df <- read_csv("data.csv")
df$SITE_ADDRESS
?awesomeIcons
awesomeIconList()
?awesomeIconList()
iconList()
?icons
?awesomeIcons
library(crosstalk)
library(tidyverse)
library(flexdashboard)
library(plotly)
library(leaflet)
download.file("https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/4ef82789-e038-44ef-a478-a8f3590c3eb1/resource/979fb513-5186-41e9-bb23-7b5cc6b89915/download/Apartment%20Building%20Evaluation.csv", "data.csv")
df <- read_csv("data.csv") %>%
select(ID = "_id", lng = LONGITUDE, lat = LATITUDE, SCORE, YEAR_BUILT, SITE_ADDRESS) %>% slice_sample(n = 100)
shared_df <- SharedData$new(df)
icons <- awesomeIcons(
icon = 'ion-android-home',
iconColor = 'black',
library = 'ion',
markerColor = 'blue'
)
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup = ~as.character(SITE_ADDRESS), label = ~as.character(SITE_ADDRESS), icon = icons, clusterOptions = markerClusterOptions())
p
iconList()
?iconList
icons <- awesomeIcons(
icon = 'android-home',
iconColor = 'black',
library = 'ion',
markerColor = 'blue'
)
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup = ~as.character(SITE_ADDRESS), label = ~as.character(SITE_ADDRESS), icon = icons, clusterOptions = markerClusterOptions())
p
icons <- awesomeIcons(
icon = 'business-outline',
iconColor = 'black',
library = 'ion',
markerColor = 'blue'
)
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup = ~as.character(SITE_ADDRESS), label = ~as.character(SITE_ADDRESS), icon = icons, clusterOptions = markerClusterOptions())
p
View(icons)
iconList()
icons
icons <- awesomeIcons(
icon = "home",
library = "glyphicon",
markerColor = "blue",
iconColor = "white",
spin = FALSE,
extraClasses = NULL,
squareMarker = FALSE,
iconRotate = 0,
fontFamily = "monospace",
text = NULL
)
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup = ~as.character(SITE_ADDRESS), label = ~as.character(SITE_ADDRESS), icon = icons, clusterOptions = markerClusterOptions())
p
icons <- awesomeIcons(
icon = "home",
library = "glyphicon",
markerColor = "blue",
iconColor = "white",
spin = FALSE,
extraClasses = NULL,
squareMarker = FALSE,
iconRotate = 0,
fontFamily = "monospace",
text = NULL
)
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup = ~as.character(SITE_ADDRESS), label = ~as.character(SITE_ADDRESS), icon = icons, clusterOptions = markerClusterOptions())
p
icons <- awesomeIcons(
icon = "glyphicon-home",
library = "glyphicon",
markerColor = "blue",
iconColor = "white",
spin = FALSE,
extraClasses = NULL,
squareMarker = FALSE,
iconRotate = 0,
fontFamily = "monospace",
text = NULL
)
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup = ~as.character(SITE_ADDRESS), label = ~as.character(SITE_ADDRESS), icon = icons, clusterOptions = markerClusterOptions())
p
?makeIcon
icons
icons <- makeIcon(iconUrl = "https://cdn-icons-png.flaticon.com/512/25/25694.png",
iconWidth = 20,
iconHeight = 20)
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup = ~as.character(SITE_ADDRESS), label = ~as.character(SITE_ADDRESS), icon = icons, clusterOptions = markerClusterOptions())
p
df[1]
df[:,1]
df[,1]
df[1,]
df[1,] %>% c(SITE_ADDRESS,'\n','Score:',SCORE)
df[1,] %>% c(.$SITE_ADDRESS,'\n','Score:',.$SCORE)
df %>% c(.$SITE_ADDRESS,'\n','Score:',.$SCORE)
df %>% as.character(c(.$SITE_ADDRESS,'\n','Score:',.$SCORE))
df %>% as.character(c(.$SITE_ADDRESS,'\n','Score:',.$SCORE))
df %>% as.character(c(.$SITE_ADDRESS,'/n','Score:',.$SCORE))
df %>% as.character(c(.$SITE_ADDRESS,'/n','Score:',.$SCORE))
df %>% as.character(c(.$SITE_ADDRESS,'Score:',.$SCORE))
df %>% as.character(c(.$SITE_ADDRESS,'Score:',.$SCORE))[1,]
df %>% as.character(c(.$SITE_ADDRESS,'Score:',.$SCORE))
library(crosstalk)
library(tidyverse)
library(flexdashboard)
library(plotly)
library(leaflet)
download.file("https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/4ef82789-e038-44ef-a478-a8f3590c3eb1/resource/979fb513-5186-41e9-bb23-7b5cc6b89915/download/Apartment%20Building%20Evaluation.csv", "data.csv")
df <- read_csv("data.csv") %>%
select(ID = "_id", lng = LONGITUDE, lat = LATITUDE, SCORE, YEAR_BUILT, SITE_ADDRESS)
shared_df <- SharedData$new(df)
icons <- makeIcon(iconUrl = "https://cdn-icons-png.flaticon.com/512/25/25694.png",
iconWidth = 20,
iconHeight = 20)
p <- shared_df %>%
leaflet() %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup = ~as.character(paste(sep = "<br/>",SITE_ADDRESS,paste('Score: ',SCORE),paste('Year Built: ',YEAR_BUILT))), label = ~as.character(SITE_ADDRESS), icon = icons, clusterOptions = markerClusterOptions())
p
?makeIcon
