labs(edge_width = "Strength")
library(plotly)
ggplotly(graphtidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE))
ggplott <- graphtidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE)
ggplotly(ggplott)
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / max(N))
nodes <- nodes %>%
mutate(id=id-1) %>%
mutate(nodesize = authority.score(graphtidy)$vector)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize")
library(tidyverse)
library(igraph)
library(ggraph)
library(networkD3)
data <- read_rds("StormGraph.RDS")
graph <- graph_from_data_frame(data, directed = FALSE)
plot(graph)
data2 <- data[data$N >= quantile(data$N, p = 0.98),,]
data2 %>%
graph_from_data_frame(directed = FALSE) %>%
plot(layout = layout_with_graphopt)
library(tidygraph)
nodes <- c(data2$Person1, data2$Person2) %>%
unique() %>%
tibble(label = .) %>%
rowid_to_column("id")
graphtidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE)
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / max(N))
nodes <- nodes %>%
mutate(id=id-1) %>%
mutate(nodesize = authority.score(graphtidy)$vector)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize")
graphtidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE)
setwd("~/R/blogdown-DataSandBox/content/post/2022-07-12-network-graphs-in-r")
blogdown:::preview_site()
library(tidyverse)
library(igraph)
library(ggraph)
library(networkD3)
data <- read_rds("StormGraph.RDS")
graph <- graph_from_data_frame(data, directed = FALSE)
plot(graph)
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / max(N))
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / max(N))
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / max(N))
nodes <- nodes %>%
mutate(id=id-1) %>%
mutate(nodesize = authority.score(graph_tidy)$vector)
library(tidyverse)
library(igraph)
library(ggraph)
library(networkD3)
data <- read_rds("StormGraph.RDS")
graph <- graph_from_data_frame(data, directed = FALSE)
plot(graph)
data2 <- data[data$N >= quantile(data$N, p = 0.98),,]
data2 %>%
graph_from_data_frame(directed = FALSE) %>%
plot(layout = layout_with_graphopt)
library(tidygraph)
nodes <- c(data2$Person1, data2$Person2) %>%
unique() %>%
tibble(label = .) %>%
rowid_to_column("id")
edges <- data2 %>%
left_join(nodes, by = c("Person1"="label")) %>%
rename(from = "id") %>%
left_join(nodes, by = c("Person2"="label")) %>%
rename("to" = "id") %>%
select(from, to, N)
graph_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)
graph_tidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE)
library(tidyverse)
library(igraph)
library(ggraph)
library(networkD3)
data <- read_rds("StormGraph.RDS")
graph <- graph_from_data_frame(data, directed = FALSE)
plot(graph)
data2 <- data[data$N >= quantile(data$N, p = 0.98),,]
data2 %>%
graph_from_data_frame(directed = FALSE) %>%
plot(layout = layout_with_graphopt)
library(tidygraph)
nodes <- c(data2$Person1, data2$Person2) %>%
unique() %>%
tibble(label = .) %>%
rowid_to_column("id")
edges <- data2 %>%
left_join(nodes, by = c("Person1"="label")) %>%
rename(from = "id") %>%
left_join(nodes, by = c("Person2"="label")) %>%
rename("to" = "id") %>%
select(from, to, N)
graph_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)
graph_tidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE)
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / max(N))
nodes <- nodes %>%
mutate(id=id-1) %>%
mutate(nodesize = authority.score(graph_tidy)$vector*3)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize")
library(tidyverse)
library(igraph)
library(ggraph)
library(networkD3)
data <- read_rds("StormGraph.RDS")
graph <- graph_from_data_frame(data, directed = FALSE)
plot(graph)
data2 <- data[data$N >= quantile(data$N, p = 0.98),,]
data2 %>%
graph_from_data_frame(directed = FALSE) %>%
plot(layout = layout_with_graphopt)
library(tidygraph)
nodes <- c(data2$Person1, data2$Person2) %>%
unique() %>%
tibble(label = .) %>%
rowid_to_column("id")
edges <- data2 %>%
left_join(nodes, by = c("Person1"="label")) %>%
rename(from = "id") %>%
left_join(nodes, by = c("Person2"="label")) %>%
rename("to" = "id") %>%
select(from, to, N)
graph_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)
graph_tidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE)
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / max(N))
nodes <- nodes %>%
mutate(id=id-1) %>%
mutate(nodesize = authority.score(graph_tidy)$vector*10)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize")
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / max(N))
nodes <- nodes %>%
mutate(id=id-1) %>%
mutate(nodesize = authority.score(graph_tidy)$vector*10)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize")
library(tidyverse)
library(igraph)
library(ggraph)
library(networkD3)
data <- read_rds("StormGraph.RDS")
graph <- graph_from_data_frame(data, directed = FALSE)
plot(graph)
data2 <- data[data$N >= quantile(data$N, p = 0.98),,]
data2 %>%
graph_from_data_frame(directed = FALSE) %>%
plot(layout = layout_with_graphopt)
library(tidygraph)
nodes <- c(data2$Person1, data2$Person2) %>%
unique() %>%
tibble(label = .) %>%
rowid_to_column("id")
edges <- data2 %>%
left_join(nodes, by = c("Person1"="label")) %>%
rename(from = "id") %>%
left_join(nodes, by = c("Person2"="label")) %>%
rename("to" = "id") %>%
select(from, to, N)
graph_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)
graph_tidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE)
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / max(N))
nodes <- nodes %>%
mutate(id=id-1) %>%
mutate(nodesize = authority.score(graph_tidy)$vector*10)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize")
nodes
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = 3)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = 10)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = 10)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = 1)
nodes[1]
nodes[0]
nodes[2]
nodes[3]
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize")
library(blogdown)
stop_server()
stop_server()
serve_site()
blogdown:::preview_site()
library(tidyverse)
library(igraph)
library(ggraph)
library(networkD3)
data <- read_rds("StormGraph.RDS")
graph <- graph_from_data_frame(data, directed = FALSE)
plot(graph)
data2 <- data[data$N >= quantile(data$N, p = 0.98),,]
data2 %>%
graph_from_data_frame(directed = FALSE) %>%
plot(layout = layout_with_graphopt)
library(tidygraph)
nodes <- c(data2$Person1, data2$Person2) %>%
unique() %>%
tibble(label = .) %>%
rowid_to_column("id")
edges <- data2 %>%
left_join(nodes, by = c("Person1"="label")) %>%
rename(from = "id") %>%
left_join(nodes, by = c("Person2"="label")) %>%
rename("to" = "id") %>%
select(from, to, N)
graph_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)
graph_tidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE)
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / 10)
nodes <- nodes %>%
mutate(id=id-1) %>%
mutate(nodesize = authority.score(graph_tidy)$vector*10)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize")
library(tidyverse)
library(igraph)
library(ggraph)
library(networkD3)
data <- read_rds("StormGraph.RDS")
graph <- graph_from_data_frame(data, directed = FALSE)
plot(graph)
data2 <- data[data$N >= quantile(data$N, p = 0.98),,]
data2 %>%
graph_from_data_frame(directed = FALSE) %>%
plot(layout = layout_with_graphopt)
library(tidygraph)
nodes <- c(data2$Person1, data2$Person2) %>%
unique() %>%
tibble(label = .) %>%
rowid_to_column("id")
edges <- data2 %>%
left_join(nodes, by = c("Person1"="label")) %>%
rename(from = "id") %>%
left_join(nodes, by = c("Person2"="label")) %>%
rename("to" = "id") %>%
select(from, to, N)
graph_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)
graph_tidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE)
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / 100)
nodes <- nodes %>%
mutate(id=id-1) %>%
mutate(nodesize = authority.score(graph_tidy)$vector*100)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize")
library(tidyverse)
library(igraph)
library(ggraph)
library(networkD3)
data <- read_rds("StormGraph.RDS")
graph <- graph_from_data_frame(data, directed = FALSE)
plot(graph)
data2 <- data[data$N >= quantile(data$N, p = 0.98),,]
data2 %>%
graph_from_data_frame(directed = FALSE) %>%
plot(layout = layout_with_graphopt)
library(tidygraph)
nodes <- c(data2$Person1, data2$Person2) %>%
unique() %>%
tibble(label = .) %>%
rowid_to_column("id")
edges <- data2 %>%
left_join(nodes, by = c("Person1"="label")) %>%
rename(from = "id") %>%
left_join(nodes, by = c("Person2"="label")) %>%
rename("to" = "id") %>%
select(from, to, N)
graph_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)
graph_tidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE)
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / 150)
nodes <- nodes %>%
mutate(id=id-1) %>%
mutate(nodesize = authority.score(graph_tidy)$vector*100)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize")
library(tidyverse)
library(igraph)
library(ggraph)
library(networkD3)
data <- read_rds("StormGraph.RDS")
graph <- graph_from_data_frame(data, directed = FALSE)
plot(graph)
data2 <- data[data$N >= quantile(data$N, p = 0.98),,]
data2 %>%
graph_from_data_frame(directed = FALSE) %>%
plot(layout = layout_with_graphopt)
library(tidygraph)
nodes <- c(data2$Person1, data2$Person2) %>%
unique() %>%
tibble(label = .) %>%
rowid_to_column("id")
edges <- data2 %>%
left_join(nodes, by = c("Person1"="label")) %>%
rename(from = "id") %>%
left_join(nodes, by = c("Person2"="label")) %>%
rename("to" = "id") %>%
select(from, to, N)
graph_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)
graph_tidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE)
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / 200)
nodes <- nodes %>%
mutate(id=id-1) %>%
mutate(nodesize = authority.score(graph_tidy)$vector*100)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize")
library(tidyverse)
library(igraph)
library(ggraph)
library(networkD3)
data <- read_rds("StormGraph.RDS")
graph <- graph_from_data_frame(data, directed = FALSE)
plot(graph)
data2 <- data[data$N >= quantile(data$N, p = 0.98),,]
data2 %>%
graph_from_data_frame(directed = FALSE) %>%
plot(layout = layout_with_graphopt)
library(tidygraph)
nodes <- c(data2$Person1, data2$Person2) %>%
unique() %>%
tibble(label = .) %>%
rowid_to_column("id")
edges <- data2 %>%
left_join(nodes, by = c("Person1"="label")) %>%
rename(from = "id") %>%
left_join(nodes, by = c("Person2"="label")) %>%
rename("to" = "id") %>%
select(from, to, N)
graph_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)
graph_tidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE)
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / 200)
nodes <- nodes %>%
mutate(id=id-1) %>%
mutate(nodesize = authority.score(graph_tidy)$vector*200)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize")
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize", legend = TRUE)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize", opacityNoHover = TRUE)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 0.1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize", opacityNoHover = TRUE)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 16, zoom = TRUE, Value = "N", Nodesize = "nodesize", opacityNoHover = TRUE)
library(tidyverse)
library(igraph)
library(ggraph)
library(networkD3)
data <- read_rds("StormGraph.RDS")
graph <- graph_from_data_frame(data, directed = FALSE)
plot(graph)
data2 <- data[data$N >= quantile(data$N, p = 0.98),,]
data2 %>%
graph_from_data_frame(directed = FALSE) %>%
plot(layout = layout_with_graphopt)
library(tidygraph)
nodes <- c(data2$Person1, data2$Person2) %>%
unique() %>%
tibble(label = .) %>%
rowid_to_column("id")
edges <- data2 %>%
left_join(nodes, by = c("Person1"="label")) %>%
rename(from = "id") %>%
left_join(nodes, by = c("Person2"="label")) %>%
rename("to" = "id") %>%
select(from, to, N)
graph_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)
graph_tidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE)
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / 200)
nodes <- nodes %>%
mutate(id=id-1) %>%
mutate(nodesize = authority.score(graph_tidy)$vector*150)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 14, zoom = TRUE, Value = "N", Nodesize = "nodesize", opacityNoHover = TRUE)
library(tidyverse)
library(igraph)
library(ggraph)
library(networkD3)
data <- read_rds("StormGraph.RDS")
graph <- graph_from_data_frame(data, directed = FALSE)
plot(graph)
data2 <- data[data$N >= quantile(data$N, p = 0.98),,]
data2 %>%
graph_from_data_frame(directed = FALSE) %>%
plot(layout = layout_with_graphopt)
library(tidygraph)
nodes <- c(data2$Person1, data2$Person2) %>%
unique() %>%
tibble(label = .) %>%
rowid_to_column("id")
edges <- data2 %>%
left_join(nodes, by = c("Person1"="label")) %>%
rename(from = "id") %>%
left_join(nodes, by = c("Person2"="label")) %>%
rename("to" = "id") %>%
select(from, to, N)
graph_tidy <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)
graph_tidy %>%
mutate(Centrality = centrality_authority()) %>%
ggraph(layout = "graphopt") +
geom_node_point(aes(size=Centrality, colour = label), show.legend = FALSE) +
geom_edge_link(aes(width = N), alpha = 0.8, show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(aes(label = label), repel = TRUE)
edges <- edges %>%
mutate(from = from -1, to = to - 1) %>%
mutate(N = N / 200)
nodes <- nodes %>%
mutate(id=id-1) %>%
mutate(nodesize = authority.score(graph_tidy)$vector*150)
forceNetwork(Links = edges, Nodes = nodes, Source = "from", Target = "to", NodeID = "label", Group = "id", opacity = 1, fontSize = 14, zoom = TRUE, Value = "N", Nodesize = "nodesize", opacityNoHover = TRUE)
blogdown:::preview_site()
library(blogdown)
serve_site()
unlink("content/post/2022-07-12-network-graphs-in-r/index.en_cache", recursive = TRUE)
