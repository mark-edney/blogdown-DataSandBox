<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2022/02 on The Data Sandbox</title>
    <link>https://datasandbox.netlify.app/archives/2022/02/</link>
    <description>Recent content in 2022/02 on The Data Sandbox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://datasandbox.netlify.app/archives/2022/02/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bike shares in Toronto</title>
      <link>https://datasandbox.netlify.app/post/2022-02-27-bike-shares-in-toronto/</link>
      <pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://datasandbox.netlify.app/post/2022-02-27-bike-shares-in-toronto/</guid>
      <description>Photo by Maarten van den Heuvel on Unsplash
This article is based on a project written on 01/14/2021
Bike Rental Shiny AppThis application use the data collected from the Toronto Open Data to generate a histogram of the usage of rental bikes in Toronto during the month of June in 2020.
install.packages(&amp;quot;opendatatoronto&amp;quot;, repos = &amp;quot;http://cran.us.r-project.org&amp;quot;,dependencies = TRUE)library(opendatatoronto)library(tidyverse)library(lubridate)library(shiny)UIThere are two user inputs on the UI side:</description>
    </item>
    
    <item>
      <title>New features in R</title>
      <link>https://datasandbox.netlify.app/post/2022-02-23-new-features-in-r/</link>
      <pubDate>Wed, 23 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://datasandbox.netlify.app/post/2022-02-23-new-features-in-r/</guid>
      <description>Photo by Clint Patterson on Unsplash
Recently I had updated my RStudio client and with it came a new update to R. This is an exploration of some of the most interesting changes from R 4.0 to R 4.1.
Native Pipe FunctionDue to the extreme popularity of the magrittr pipe (‘%&amp;gt;%’), R has developed its own native pipe (‘|&amp;gt;’).
library(tidyverse)data(&amp;quot;morley&amp;quot;)morley |&amp;gt;group_by(Expt) |&amp;gt;summarise(mean = mean(Speed, na.</description>
    </item>
    
    <item>
      <title>Speed cameras in Toronto</title>
      <link>https://datasandbox.netlify.app/post/2022-02-16-/</link>
      <pubDate>Wed, 16 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://datasandbox.netlify.app/post/2022-02-16-/</guid>
      <description>Photo by Sepideh Golchin Rad on Unsplash
This project was originally written on 02/01/2021 as part of the Data Productscourse for the Data Science Specialization from Johns Hopkins University on Coursera
ObjectiveThis report plots the speed cameras in the Greater Toronto Area from the data providedby Open Toronto which can be found here.
InializationThe following code is used to initialize the required libraries.</description>
    </item>
    
    <item>
      <title>Fancy Tables in R</title>
      <link>https://datasandbox.netlify.app/post/2022-02-11-fancy-tables-in-r/</link>
      <pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://datasandbox.netlify.app/post/2022-02-11-fancy-tables-in-r/</guid>
      <description>Photo by Juan Gomez on Unsplash
IntroductionAs a continuation from my previous post exploring the use of the Stargazer library to create better looking tables, I thought I would look into the GT library. The GT library takes a different approach by creating an object class with the GT function. It is still able to create great looking tables in html or latex, but also adds support for RTF.</description>
    </item>
    
    <item>
      <title>Professional Tables with Stargazer</title>
      <link>https://datasandbox.netlify.app/post/2022-02-08-professional-tables/</link>
      <pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://datasandbox.netlify.app/post/2022-02-08-professional-tables/</guid>
      <description>This post was inspired by the following youtube video.
IntroductionTables from regression models or just plain data in R are poorly organized. The havelittle formatting and are unfit for publishing. This point is illustrated with theCO2 dataset. This dataset looks at the CO2 uptake of six different types of grass.
data(co2)mdl &amp;lt;- lm(CO2$uptake ~ CO2$Plant)mdl## ## Call:## lm(formula = CO2$uptake ~ CO2$Plant)## ## Coefficients:## (Intercept) CO2$Plant.</description>
    </item>
    
  </channel>
</rss>
