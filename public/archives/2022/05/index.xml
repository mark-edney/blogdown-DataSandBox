<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2022/05 on The Data Sandbox</title>
    <link>https://datasandbox.netlify.app/archives/2022/05/</link>
    <description>Recent content in 2022/05 on The Data Sandbox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://datasandbox.netlify.app/archives/2022/05/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Text Prediction Shiny App pt 1</title>
      <link>https://datasandbox.netlify.app/post/2022-03-11-text-prediction-app/</link>
      <pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://datasandbox.netlify.app/post/2022-03-11-text-prediction-app/</guid>
      <description>This Shiny App was first written in May of 2021
DescriptionThe goal of this project was to create an N-gram based model to predict the word to follow the user’s input. This project was to complete the Capstone project for the Johns Hopkins University Data science program on Coursera. The data for this project was provided by Swiftkey.
This project will be broken down to multiple parts as the entire project is quite large.</description>
    </item>
    
    <item>
      <title>The beauty of List comprehensions in Python</title>
      <link>https://datasandbox.netlify.app/post/2022-05-16-the-beauty-of-list-comprehensions-in-python/</link>
      <pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://datasandbox.netlify.app/post/2022-05-16-the-beauty-of-list-comprehensions-in-python/</guid>
      <description>I have spent awhile learning Python, and I was a little perplexed when it came to list comprehensions. Why would you use them? Isn’t there just an easier why?
As my proficiency increase, I have found them to be an incredibly useful tool. They save you lines of code, are easy to understand, and are usually better for performance. A good list comprehension, is truly a work of beauty.</description>
    </item>
    
    <item>
      <title>Formatting our output with Python&#39;s F strings</title>
      <link>https://datasandbox.netlify.app/post/2022-05-09-formatting-our-outout-with-python-s-f-strings/</link>
      <pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://datasandbox.netlify.app/post/2022-05-09-formatting-our-outout-with-python-s-f-strings/</guid>
      <description>I have recently been on a tear of different challenges on the site HackerRank. I am about halfway through their 30 days of code and 10 days of statistics. These challenges often require to output number to a certain a number of significant digits. I’ve always thought that the round function can be used for this, but I am wrong. The F string seems to be a powerful tool to accomplish this, and worth your time learning if you are unfamiliar.</description>
    </item>
    
    <item>
      <title>Level up your programming skills</title>
      <link>https://datasandbox.netlify.app/post/2022-05-01-level-up-your-progamming-skills/</link>
      <pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://datasandbox.netlify.app/post/2022-05-01-level-up-your-progamming-skills/</guid>
      <description>How do you become a better programmer? Well, there is strong scientific evidence for the support of the principle of deliberate practice. Deliberate practice is a method of skill development first written by Anders Ericsson in the book “Peak: Secrets from the New Science of Expertise”. I would also recommend reading “Talent Is Overrated: What Really Separates World-Class Performers from Everybody Else” by Geoff Colvin.
Deliberate PracticeDeliberate Practice can be summarized to the following points:</description>
    </item>
    
  </channel>
</rss>
